/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/




namespace AceGen.Todo.Data;

public class TodoIdData : AbstractTodoIdData, ITodoIdData {
	
	public TodoIdData(
		string? id, 
		string uuid
	) : base(id, uuid) {
	}

	public TodoIdData( string uuid ) : base(uuid) {
	}

	override public void MigrateLegacyData(String json) {
	}

	public static ITodoIdData GenerateTestData() {
		Random random = new Random();
		ITodoIdData testData = (ITodoIdData) new AceGen.Todo.Models.TodoIdModel();
		testData.Id = RandomString(random);
		return testData;
	}
	
	private static String RandomString(Random random) {
		String chars = "aaaaaaabcdeeeeeeeffffghiiiiiiijkllllllmmmmnnnnnnnooooooooopqrstttuuuuuuuvxyz";
		int length = random.Next(20) + 5;
		return new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());
	}
	
	private static bool RandomBool(Random random) {
		return random.Next() > (Int32.MaxValue / 2);
	}
	
	private static float RandomFloat(Random random) {
	    double mantissa = (random.NextDouble() * 2.0) - 1.0;
	    double exponent = Math.Pow(2.0, random.Next(-126, 128));
	    return (float)(mantissa * exponent);
	}
	
	
}



/******* S.D.G. *******/



