/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/




namespace AceGen
{
    public class ViewProvider
    {
        private Dictionary<string, List<Action<IDataContainer>>> ConsumerMap;
        private Dictionary<string, List<Action<IDataContainer>>> AfterCommitConsumerMap;

        public ViewProvider()
        {
            ConsumerMap = new Dictionary<string, List<Action<IDataContainer>>>();
            AfterCommitConsumerMap = new Dictionary<string, List<Action<IDataContainer>>>();
        }

        public void AddConsumer(string name, Action<IDataContainer> eventConsumer) {
            var consumerForEvent = ConsumerMap.FirstOrDefault(e => e.Key == name).Value;
            if (consumerForEvent == null) {
                consumerForEvent = new List<Action<IDataContainer>>();
                ConsumerMap[name] = (consumerForEvent);
            }
            consumerForEvent.Add(eventConsumer);
        }

        public void AddAfterCommitConsumer(string name, Action<IDataContainer> eventConsumer) {
            var consumerForEvent = AfterCommitConsumerMap.FirstOrDefault(e => e.Key == name).Value;
            if (consumerForEvent == null) {
                consumerForEvent = new List<Action<IDataContainer>>();
                AfterCommitConsumerMap[name] = (consumerForEvent);
            }
            consumerForEvent.Add(eventConsumer);
        }

        public List<Action<IDataContainer>> GetConsumerForEvent(string name) {
            return ConsumerMap.FirstOrDefault(e => e.Key == name).Value;
        }

        public List<Action<IDataContainer>> GetAfterCommitConsumerForEvent(string name) {
            return AfterCommitConsumerMap.FirstOrDefault(e => e.Key == name).Value;
        }
    }
}



/******* S.D.G. *******/



