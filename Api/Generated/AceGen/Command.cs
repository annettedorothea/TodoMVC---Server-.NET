/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/




namespace AceGen
{
    public abstract class Command<T> : ICommand<T> where T : IDataContainer
    {

        public abstract string CommandName { get; }

        private readonly AppConfiguration appConfiguration;
        private readonly IAceDao aceDao;

        protected Command(AppConfiguration appConfiguration, IAceDao aceDao)
        {
            this.appConfiguration = appConfiguration;
            this.aceDao = aceDao;
        }

        public abstract void addEventsToTimeline(T data);

        protected abstract T executeCommand(T data);

        public T execute(T data)
        {
            if (appConfiguration.WriteTimeline)
            {
				aceDao.addCommandToTimeLine(this.CommandName, data);
            }
            return this.executeCommand(data);
        }

        public abstract void publishAfterCommitEventsEvents(T data);

        public abstract void publishEvents(T data);

        protected void throwSecurityException()
        {
            throw new UnauthorizedAccessException();
        }

        protected void throwIllegalArgumentException(String error)
        {
            throw new BadHttpRequestException(error);
        }
    }
}




/******* S.D.G. *******/



